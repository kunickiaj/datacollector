allprojects {
  apply plugin: 'maven'

  group = 'com.streamsets'
  version = '3.5.0-SNAPSHOT'

  // Add JUnit to test scope for ll projects using the Java plugin
  plugins.withType(JavaPlugin) {
    dependencies {
      testCompile 'junit:junit:4.12'
      testCompile 'org.mockito:mockito-core:1.10.19'
    }
  }

  repositories {
    mavenLocal()

    maven { url "https://repo.streamsets.net/artifactory/libs-release" }
    maven { url "https://repo.streamsets.net/artifactory/libs-snapshot" }
    maven { url "https://repository.cloudera.com/content/groups/cloudera-repos" }
    maven { url "http://packages.confluent.io/maven/" }
    maven { url "https://artifacts.elastic.co/maven" }
    maven { url "http://repository.mapr.com/maven/" }
    maven { url "http://repo.hortonworks.com/content/repositories/releases/" }
    maven { url "http://repo.hortonworks.com/content/repositories/re-hosted/" }
    maven { url "http://repo.hortonworks.com/content/repositories/jetty-hadoop/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://files.kinetica.com/nexus/content/repositories/releases/" }
    maven { url "http://repository.mapr.com/nexus/content/repositories/releases" }
//    maven { url "http://bits.cloudera.com/f93c6c9d/cdh6/6.0.0-beta1/maven-repository/" }
  }
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'scala'
  apply plugin: 'java-library-distribution'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  // The current annotation processor expects a slightly different configuration, as determined by the maven resources plugin
//  sourceSets {
//    main {
//      output.resourcesDir = "$buildDir/classes/java/$name"
//    }
//    test {
//      output.resourcesDir = "$buildDir/classes/java/$name"
//    }
//  }
}

apply plugin: 'java'

configurations {
  api
  container
  rootClasspath
}

dependencies {
  rootClasspath "org.xerial.snappy:snappy-java:1.0.5"
  api(
      "com.streamsets:streamsets-datacollector-api:$version",
      "org.slf4j:jul-to-slf4j:1.7.7"
  )
  container(
      project(':streamsets-datacollector-root-proto:streamsets-datacollector-root:streamsets-datacollector-container'),
      project(':streamsets-datacollector-root-proto:streamsets-datacollector-root:streamsets-datacollector-container-common'),
  )
}

apply plugin: 'distribution'
// for Ant filter
import org.apache.tools.ant.filters.ReplaceTokens

distributions {
  core {
    baseName = 'streamsets-datacollector-core'
    contents {
      // Can be refactored later
      into('') {
        from('dist/src/main') {
          include "etc/**"
          eachFile { file ->
            println file.name
            if (file.name.contains("password") || file.name.contains("realm")) {
              file.setMode(0600)
            }
          }
        }
      }
      into('') {
        from('dist/src/main') {
          include "bin/**"
          include "libexec/**"
          filter(ReplaceTokens, tokens: ['project.version': project.property("version")])
        }
        fileMode = 0755
      }
      // Default logging configuration
      into('etc') {
        from 'container/src/main/resources/sdc-log4j.properties-default'
        rename 'sdc-log4j.properties-default', 'sdc-log4j.properties'
      }
      // Empty directories
      into('') {
        File.createTempDir().with {
          ['data', 'libs-common-lib', 'log', 'resources', 'streamsets-libs-extras', 'user-libs'].forEach { dir ->
            def file = new File(absolutePath, dir)
            file.mkdirs()
          }
          from(absolutePath) {
            includeEmptyDirs = true
          }
        }
      }
      into('api-lib') {
        from configurations.api
      }
      into('libexec/bootstrap-libs/main') {
        from 'bootstrap/build/libs'
      }
      into('cli-lib') {
        from 'cli/build/libs'
      }
      into('container-lib') {
        from configurations.container
      }
      into('root-lib') {
        from configurations.rootClasspath
      }
      // The UI
      into('sdc-static-web') {
        from('datacollector-ui/target/dist') {
//          exclude "karma-conf.js"
//          exclude "app/**"
//          exclude "bower_components"
        }
      }
      // TODO: include docs
      // Extract any libs we want to include in the core tarball
      into('streamsets-libs') {
        // TODO: add basic lib
        // TODO: add dev lib
        // TODO: add stats lib
        // TODO: add windows lib
        from zipTree('dataformats-lib/build/distributions/streamsets-datacollector-dataformats-lib-3.5.0-SNAPSHOT.zip')
        from zipTree('aws-lib/build/distributions/streamsets-datacollector-aws-lib-3.5.0-SNAPSHOT.zip')
      }
    }
  }
}